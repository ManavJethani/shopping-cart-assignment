{"version":3,"sources":["components/custom/Toast.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","utils/config.js","components/productlist/ProductList.jsx","pages/ProductListPage.jsx"],"names":["Toast","props","position","description","title","onClose","show","toastRef","useRef","setTimeout","role","className","ref","onClick","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","axios","create","baseURL","SingleProduct","product","handleAddToCart","name","loading","src","imageURL","alt","price","e","withRouter","dispatch","useDispatch","history","useHistory","categories","useSelector","state","TestReducer","categoryData","products","productData","useState","setShow","renderProducts","setRenderProducts","useEffect","a","BaseUrl","get","then","res","getProductData","data","catch","console","log","getCategoryData","fetchData","match","params","id","reduce","acc","x","category","filterProducts","target","options","categoryId","selectedIndex","post","status","keys","includes","addQuantity","quantity","manageCart","map","index","key","onChange","ProductListPage"],"mappings":"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","file":"static/js/9.3058721d.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useRef } from 'react';\r\nimport './Toast.scss';\r\n\r\nconst Toast = props => {\r\n    const { position, description, title, onClose,show} = props;\r\n    const toastRef = useRef();\r\n\r\n    if(show){\r\n        setTimeout(()=>{\r\n            onClose();\r\n        },5000)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section role=\"alert\"  className={show ? `notification-container ${position} ${title}` : 'notification-close'}>\r\n                <div className={`notification toast ${position}`}>\r\n                    <div ref={toastRef} className=\"notification-heading\">\r\n                        <h4 className=\"notification-title\">{title}</h4>\r\n                        <button data-testid=\"toast-close-btn\" onClick={onClose}>X</button>\r\n                    </div>\r\n                    <p className=\"notification-message\">\r\n                        {description}\r\n                    </p>\r\n                </div>\r\n            </section>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Toast;","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import axios from 'axios'\r\n\r\nexport default axios.create({\r\n    baseURL : 'http://localhost:3001'\r\n})","import { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addQuantity, getCategoryData, getProductData, manageCart, toggleToast } from \"../../redux/actions\";\r\nimport BaseUrl from '../../utils/config';\r\nimport { useHistory, withRouter } from \"react-router-dom\";\r\nimport Toast from \"../custom/Toast\";\r\n\r\nconst ProductList = (props) => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const categories = useSelector(state => state.TestReducer.categoryData)\r\n    const products = useSelector(state => state.TestReducer.productData)\r\n    const [show, setShow] = useState(false)\r\n    const [renderProducts, setRenderProducts] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            if (products.length === 0) {\r\n                await BaseUrl.get('/products').then((res) => {\r\n                    dispatch(getProductData(res.data))\r\n                    setRenderProducts(res.data)\r\n                }).catch((e) => console.log('something went wrong', e))\r\n            }\r\n            if (categories.length === 0) {\r\n                await BaseUrl.get('/categories').then((res) => {\r\n                    dispatch(getCategoryData(res.data))\r\n                }).catch((e) => console.log('something went wrong', e));\r\n            }\r\n        }\r\n        fetchData();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (props.match.params.id !== 'all') {\r\n            if (products) {\r\n                setRenderProducts(products.reduce((acc, x) => {\r\n                    if (props.match.params.id === x.category) {\r\n                        acc.push(x);\r\n                        return acc;\r\n                    } else return acc;\r\n                }, []))\r\n            }\r\n        } else {\r\n            setRenderProducts(products)\r\n        }\r\n    }, [props.match.params.id])\r\n\r\n    const filterProducts = (e, category) => {\r\n        if (e.target.options) {\r\n            let categoryId = e.target.options[e.target.selectedIndex].id;\r\n            categoryId ? history.push(`/products/${categoryId}`) : history.push(`/products/all`)\r\n        }\r\n        else {\r\n            category.id !== props.match.params.id ?\r\n                history.push(`/products/${category.id}`) :\r\n                history.push(`/products/all`)\r\n        }\r\n    }\r\n\r\n    const handleAddToCart = async (e, product) => {\r\n        const response = await BaseUrl.post('/addToCart', product.id)\r\n        if (response.status === 200) {\r\n            if (Object.keys(product).includes('quantity')) {\r\n                dispatch(addQuantity(product))\r\n            } else {\r\n                product.quantity = 1;\r\n                dispatch(manageCart(product))\r\n            }\r\n            setShow(true)\r\n        }\r\n    }\r\n\r\n    return <>\r\n        <div className=\"product-style\">\r\n            <aside className=\"side-section\">\r\n                <ul className=\"list-style\">\r\n                    <li data-testid=\"category-list-section-all\" className=\"each-list\" onClick={() => history.push('/products/all')}>All Products</li>\r\n                    {categories.map((category, index) => (\r\n                        <li data-testid=\"category-list-section\" className={props.match.params.id === category.id ? 'each-list highlight-cat' : 'each-list'}\r\n                            key={index}\r\n                            value={category.key}\r\n                            onClick={(e) => filterProducts(e, category)}\r\n                        >\r\n                            {category.name}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </aside>\r\n            <section role=\"main\" className=\"main-section\">\r\n                <div data-testid=\"category-list-dropdown\" className=\"dropdown-style\">\r\n                    <select onChange={(e) => filterProducts(e)}>\r\n                        <option>Select Category</option>\r\n                        {categories.map((category, index) => (\r\n                            <option\r\n                                id={category.id}\r\n                                aria-label={category.name}\r\n                                key={index}\r\n                                value={category.key}\r\n                            >\r\n                                {category.name}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                {renderProducts.length > 0 ? renderProducts.map((product) => (\r\n                    <SingleProduct key={product.id} product={product} handleAddToCart={handleAddToCart} />\r\n                )) : <p role=\"alert\" className=\"no-item\">No Products for this Category</p>}\r\n            </section>\r\n            <Toast\r\n                show={show}\r\n                position=\"top-right\"\r\n                description=\"Item added to cart\"\r\n                title=\"Success\"\r\n                onClose={() => setShow(false)}\r\n            />\r\n        </div>\r\n    </>\r\n}\r\n\r\nfunction SingleProduct({ product, handleAddToCart }) {\r\n    return (\r\n        <div data-testid=\"single-product\" className=\"single-product\">\r\n            <h2 className=\"min-height\">{product?.name}</h2>\r\n            <div className=\"single-product-img-text-container\">\r\n                <div className=\"align-center\">\r\n                    <img className=\"product-image-styles\" loading=\"lazy\" src={product?.imageURL} alt={product?.name} />\r\n                </div>\r\n                <div className=\"desc-section\">\r\n                    <p className=\"desc-para\">{product?.description}</p>\r\n                    <div className=\"button-desktop-style\">\r\n                        MRP Rs.{product?.price}\r\n                        <button data-testid=\"buy-now\" className=\"each-category-button-style\" onClick={(e) => handleAddToCart(e, product)}>Buy Now</button>\r\n                    </div>\r\n                    <div className=\"button-mobile-style\">\r\n                        <button data-testid=\"buy-now-mobile\" className=\"each-category-button-style\" onClick={(e) => handleAddToCart(e, product)}>Buy Now @ Rs.{product?.price}</button>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(ProductList)","import ProductList from '../components/productlist/ProductList';\r\n\r\nconst ProductListPage = () => {\r\n    return <><ProductList /></>\r\n}\r\n\r\nexport default ProductListPage;"],"sourceRoot":""}