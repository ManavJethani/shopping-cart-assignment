{"version":3,"sources":["components/custom/Toast.jsx","components/custom/Modal.jsx","components/cart/Cart.jsx","pages/CartPage.jsx"],"names":["Toast","props","position","description","title","onClose","show","toastRef","useRef","setTimeout","role","className","ref","onClick","Modal","CSSTransition","in","unmountOnExit","timeout","enter","exit","e","stopPropagation","background","children","footerContent","QuantityBar","item","addHandler","removeHandler","id","type","name","value","quantity","disabled","price","Cart","cartData","useSelector","state","TestReducer","modalFlag","dispatch","useDispatch","history","useHistory","useState","setShow","auth","addQuantity","removeQuantity","removeCartItem","handleCheckoutClick","toggleModal","clearCart","push","RenderCartList","map","src","imageURL","alt","cheapText","FooterContent","length","cartFooterText","tabIndex","proceedToCheckoutText","ele","reduce","a","b","toFixed","displayCartItems","noItemText","favItemText","CartPage"],"mappings":"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","file":"static/js/6.5d7b2199.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useRef } from 'react';\r\nimport './Toast.scss';\r\n\r\nconst Toast = props => {\r\n    const { position, description, title, onClose,show} = props;\r\n    const toastRef = useRef();\r\n\r\n    if(show){\r\n        setTimeout(()=>{\r\n            onClose();\r\n        },5000)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section role=\"alert\"  className={show ? `notification-container ${position} ${title}` : 'notification-close'}>\r\n                <div className={`notification toast ${position}`}>\r\n                    <div ref={toastRef} className=\"notification-heading\">\r\n                        <h4 className=\"notification-title\">{title}</h4>\r\n                        <button data-testid=\"toast-close-btn\" onClick={onClose}>X</button>\r\n                    </div>\r\n                    <p className=\"notification-message\">\r\n                        {description}\r\n                    </p>\r\n                </div>\r\n            </section>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Toast;","import { CSSTransition } from \"react-transition-group\";\r\nimport \"./Modal.scss\";\r\n\r\n\r\nexport default function Modal(props) {\r\n    return (\r\n        <CSSTransition\r\n            in={props.show}\r\n            unmountOnExit\r\n            timeout={{ enter: 0, exit: 300 }}\r\n        >\r\n            <div data-testid=\"modal\" role=\"dialog\" className=\"modal\">\r\n                <section className=\"modal-content\" onClick={e => e.stopPropagation()}>\r\n                    <header className=\"modal-header\">\r\n                        <h4 data-testid=\"modal-title\" className=\"modal-title\">{props.title}</h4>\r\n                        <button onClick={props.onClose} className=\"button\">x</button>\r\n                    </header>\r\n                    <div className={`modal-body ${props.background}`}>{props.children}</div>\r\n                    <footer className=\"modal-footer\">{props.footerContent}</footer>\r\n                </section>\r\n            </div>\r\n        </CSSTransition>\r\n    );\r\n};\r\n\r\n","import { Fragment } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { cartFooterText, cheapText, favItemText, noItemText, proceedToCheckoutText } from \"../../constants\";\r\nimport { addQuantity, clearCart, removeCartItem, removeQuantity, toggleModal, toggleToast, updateQuantity } from \"../../redux/actions\";\r\nimport { displayCartItems } from \"../../utils/Validation\"\r\nimport Modal from \"../custom/Modal\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport Toast from \"../custom/Toast\";\r\n\r\nconst Cart = () => {\r\n    const cartData = useSelector(state => state.TestReducer.cartData)\r\n    const modalFlag = useSelector(state => state.TestReducer.modalFlag)\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [show, setShow] = useState();\r\n    const auth = useSelector(state => state.TestReducer.auth)\r\n\r\n    const addHandler = (e, item) => {\r\n        dispatch(addQuantity(item))\r\n    }\r\n\r\n    const removeHandler = (e, item) => {\r\n        item.quantity > 1 ? dispatch(removeQuantity(item)) : dispatch(removeCartItem(item.id))\r\n    }\r\n\r\n    const handleCheckoutClick = () => {\r\n        if (auth) {\r\n            dispatch(toggleModal(false))\r\n            setShow(true)\r\n            dispatch(clearCart())\r\n        } else {\r\n            setShow(true)\r\n            setTimeout(() => {\r\n                history.push('/login')\r\n                dispatch(toggleModal(false))\r\n            }, 3000)\r\n        }\r\n    }\r\n\r\n    const RenderCartList = () => {\r\n        return <Fragment>{cartData.map(item => {\r\n            return <div data-testid=\"cart-container\" key={item.id} className=\"cart-detail-container\">\r\n                <img src={item.imageURL} alt={item.name}></img>\r\n                <div className=\"cart-details-section\">\r\n                    <h4>{item.name}</h4>\r\n                    <div className=\"cart-details-disp-flex\">\r\n                        <QuantityBar\r\n                            item={item}\r\n                            addHandler={addHandler}\r\n                            removeHandler={removeHandler}\r\n                        />\r\n                        <p>Rs. {item.quantity * item.price}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        })}\r\n            <div className=\"cheap-image-container\"><img src=\"/static/images/lowest-price.png\" alt=\"lowest-price-text\" />{cheapText}</div>\r\n        </Fragment>\r\n    }\r\n\r\n    const FooterContent = () => {\r\n        return cartData.length > 0 ? <Fragment><p className=\"align-center\">{cartFooterText}</p>\r\n            <button tabIndex={-1} onClick={handleCheckoutClick} className=\"each-category-button-style modal-footer-button-style\">\r\n                <div>{cartData.length ? proceedToCheckoutText  : 'Start shopping'}</div>\r\n                <div>Rs.{cartData.map((ele) => ele.price * ele.quantity).reduce((a, b) => a + b, 0).toFixed(2)}</div>\r\n            </button>\r\n        </Fragment> : <button onClick={() => dispatch(toggleModal(false))} className=\"each-category-button-style no-item-button\" >Start Shopping</button>\r\n    }\r\n\r\n    return <>\r\n        <Modal\r\n            title={cartData.length > 0 ? `My Cart (${displayCartItems(cartData)} items)` : 'My Cart'}\r\n            show={modalFlag}\r\n            onClose={() => dispatch(toggleModal(false))}\r\n            footerContent={<FooterContent />}\r\n        >\r\n            <>{cartData.length > 0 ?\r\n                <RenderCartList /> :\r\n                <div className=\"no-item-style\">\r\n                    <strong>{noItemText}</strong>\r\n                    <p>{favItemText}</p>\r\n                </div>}\r\n            </>\r\n        </Modal>\r\n        {!auth ? <Toast\r\n            show={show}\r\n            position=\"top-right\"\r\n            description=\"User not Logged In, redirecting to login screen\"\r\n            title=\"Error\"\r\n            onClose={() => setShow(false)}\r\n        /> : <Toast\r\n            show={show}\r\n            position=\"top-right\"\r\n            description=\"Checkout Successful\"\r\n            title=\"Success\"\r\n            onClose={() => setShow(false)}\r\n        />}\r\n    </>\r\n}\r\n\r\nconst QuantityBar = ({ item, addHandler, removeHandler }) => {\r\n    return <div className=\"quantity\">\r\n        <button data-testid=\"plus\" className=\"each-category-button-style circle-button\" id=\"plus\" type=\"button\" name=\"button\" onClick={(e) => addHandler(e, item)}>\r\n            +\r\n        </button>\r\n        <input\r\n            data-testid=\"quantity-input\"\r\n            aria-label=\"quantity-input\"\r\n            type=\"number\"\r\n            name=\"name\"\r\n            value={item.quantity}\r\n            disabled\r\n        />\r\n        <button data-testid=\"sub\" className=\"circle-button each-category-button-style\" id=\"sub\" type=\"button\" name=\"button\" onClick={(e) => removeHandler(e, item)}>\r\n            -\r\n        </button>\r\n        <p> x {item.price}</p>\r\n    </div>\r\n}\r\n\r\n\r\n\r\nexport default Cart;","import Cart from '../components/cart/Cart';\r\n\r\nconst CartPage = () => {\r\n    return <><Cart /></>\r\n}\r\n\r\nexport default CartPage;"],"sourceRoot":""}