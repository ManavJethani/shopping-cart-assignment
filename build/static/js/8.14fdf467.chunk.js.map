{"version":3,"sources":["components/custom/CustomButton.jsx","components/custom/CustomTextField.jsx","components/login/Login.jsx","pages/LoginPage.jsx"],"names":["useStyles","makeStyles","theme","root","width","margin","backgroundColor","CustomButton","onClick","id","children","classes","className","variant","color","memo","spacing","fontSize","CustomTextField","onChange","value","label","type","error","helperText","Login","dispatch","useDispatch","history","useHistory","React","useState","email","setEmail","password","setPassword","setError","loginText","autoComplete","e","target","event","preventDefault","hardcodedCred","sessionStorage","setItem","token","setAuthenticated","goBack","invalidUser","to","newAccountText","LoginPage"],"mappings":"4IAAA,mCAGMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,MAAM,OACNC,OAAQ,WACRC,gBAAgB,eAIlBC,EAAe,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,QAAQC,EAAiB,EAAjBA,GAAGC,EAAc,EAAdA,SACxBC,EAAUX,IAChB,OAAO,cAAC,IAAD,CAAQY,UAAWD,EAAQR,KAAOU,QAAQ,YAAYC,MAAM,YAAYN,QAASA,EAASC,GAAIA,EAA9F,SAAmGC,KAG/FK,mBAAKR,I,iCChBpB,mCAGMP,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACJ,uBAAwB,CACtBE,OAAQH,EAAMc,QAAQ,IAExB,wBAAwB,CACtBC,SAAS,IAEX,wBAAwB,CACtBA,SAAS,IAETb,MAAM,OACNC,OAAQ,gBAIVa,EAAkB,SAAC,GAAqD,IAApDT,EAAmD,EAAnDA,GAAGU,EAAgD,EAAhDA,SAASC,EAAuC,EAAvCA,MAAMC,EAAiC,EAAjCA,MAAMC,EAA2B,EAA3BA,KAAKC,EAAsB,EAAtBA,MAAMC,EAAgB,EAAhBA,WACnDb,EAAUX,IAChB,OAAO,cAAC,IAAD,CAAWY,UAAWD,EAAQR,KAAMoB,MAAOA,EAAOC,WAAYA,EAAYf,GAAIA,EAAIW,MAAOA,EAAOD,SAAUA,EAAUE,MAAOA,EAAOC,KAAMA,KAGpIP,mBAAKG,I,qICsCLO,EArDD,WAEV,IAAMC,EAAWC,cACXC,EAAUC,cAChB,EAA0BC,IAAMC,SAAS,IAAzC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCH,IAAMC,SAAS,IAA/C,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA0BL,IAAMC,SAAS,IAAzC,mBAAOR,EAAP,KAAca,EAAd,KAaA,OAAO,qBAAKxB,UAAU,MAAf,SACH,sBAAKA,UAAU,WAAf,UACI,0BAASA,UAAU,aAAnB,UACI,uCACA,gCAAQyB,SAEZ,0BAASzB,UAAU,YAAnB,UACI,qBAAKA,UAAU,aAAf,SAA6BW,IAC7B,uBAAMe,aAAa,KAAnB,UACI,cAACpB,EAAA,EAAD,CACIG,MAAM,QACNF,SAAU,SAACoB,GAAD,OAAON,EAASM,EAAEC,OAAOpB,QACnCX,GAAG,UAEP,cAACS,EAAA,EAAD,CACIG,MAAM,WACNC,KAAK,WACLH,SAAU,SAACoB,GAAD,OAAOJ,EAAYI,EAAEC,OAAOpB,QACtCX,GAAG,aAEP,cAACF,EAAA,EAAD,CACIM,QAAQ,YACRC,MAAM,YACNN,QAlCA,SAACiC,GACjBA,EAAMC,iBACDV,IAAUW,IAAcX,OAAWE,IAAaS,IAAcT,UAC/DU,eAAeC,QAAQ,aAAcC,KACrCpB,EAASqB,aAAiB,IAC1BnB,EAAQoB,UAERZ,EAASa,MA4BGxC,GAAG,WAJP,wBAQJ,cAAC,IAAD,CAAYyC,GAAG,YAAf,SAA4BC,eClD7BC,UAJG,WACd,OAAO,mCAAE,cAAC,EAAD","file":"static/js/8.14fdf467.chunk.js","sourcesContent":["import { Button } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { memo } from \"react\";\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width:'100%',\r\n        margin: '10px 0px',\r\n        backgroundColor:'#b72f60'\r\n    },\r\n  }));\r\n\r\nconst CustomButton = ({onClick,id,children}) => {\r\n    const classes = useStyles();\r\n    return <Button className={classes.root}  variant=\"contained\" color=\"secondary\" onClick={onClick} id={id}>{children}</Button>\r\n}\r\n\r\nexport default memo(CustomButton)","import { TextField } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { memo } from \"react\";\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n      },\r\n      '& .MuiInputBase-input':{\r\n        fontSize:12\r\n      },\r\n      '& .MuiInputLabel-root':{\r\n        fontSize:12\r\n      },\r\n        width:'100%',\r\n        margin: '10px 0px',\r\n    },\r\n  }));\r\n\r\nconst CustomTextField = ({id,onChange,value,label,type,error,helperText}) => {\r\n    const classes = useStyles();\r\n    return <TextField className={classes.root} error={error} helperText={helperText} id={id} value={value} onChange={onChange} label={label} type={type}/>\r\n}\r\n\r\nexport default memo(CustomTextField);","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { hardcodedCred, invalidUser, loginText, newAccountText, token } from '../../constants';\r\nimport { setAuthenticated } from '../../redux/actions';\r\nimport CustomButton from '../custom/CustomButton';\r\nimport CustomTextField from '../custom/CustomTextField';\r\nimport CustomLink from '../custom/NavLink';\r\n\r\nconst Login = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory()\r\n    const [email, setEmail] = React.useState(\"\")\r\n    const [password, setPassword] = React.useState(\"\")\r\n    const [error, setError] = React.useState('')\r\n\r\n    const handleClick = (event) => {\r\n        event.preventDefault();\r\n        if ((email === hardcodedCred.email) && (password === hardcodedCred.password)) {\r\n            sessionStorage.setItem('auth-token', token);\r\n            dispatch(setAuthenticated(true))\r\n            history.goBack();\r\n        } else {\r\n            setError(invalidUser)\r\n        }\r\n    }\r\n\r\n    return <div className=\"App\">\r\n        <div className=\"flex-div\">\r\n            <section className=\"align-left\">\r\n                <h2>Login</h2>\r\n                <small>{loginText}</small>\r\n            </section>\r\n            <section className=\"auth-form\">\r\n                <div className=\"error-text\">{error}</div>\r\n                <form autoComplete=\"on\">\r\n                    <CustomTextField\r\n                        label=\"Email\"\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        id=\"email\"\r\n                    />\r\n                    <CustomTextField\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        id=\"password\"\r\n                    />\r\n                    <CustomButton\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        onClick={handleClick}\r\n                        id=\"register\">\r\n                        Sign In\r\n                    </CustomButton>\r\n                </form>\r\n                <CustomLink to=\"/register\">{newAccountText}</CustomLink>\r\n            </section>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Login","import Login from '../components/login/Login';\r\n\r\nconst LoginPage = () => {\r\n    return <><Login /></>\r\n}\r\n\r\nexport default LoginPage;"],"sourceRoot":""}