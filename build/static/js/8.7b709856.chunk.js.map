{"version":3,"sources":["components/custom/Toast.jsx","components/custom/CustomTextField.jsx","components/custom/CustomButton.jsx","components/register/Register.jsx","pages/RegisterPage.jsx"],"names":["Toast","props","position","description","title","onClose","show","toastRef","useRef","setTimeout","role","className","ref","onClick","useStyles","makeStyles","theme","root","margin","spacing","fontSize","width","CustomTextField","id","onChange","value","label","type","error","helperText","classes","memo","backgroundColor","CustomButton","children","variant","color","Register","history","useHistory","useState","firstName","lastName","email","password","confirmPassword","registerForm","setRegisterForm","setError","errorTextRef","setShow","handleTextChange","e","target","prev","registerText","tabIndex","autoComplete","passwordHelperText","event","preventDefault","checkMissing","validateEmail","validatePassword","current","focus","errorMessage","passwordMismatchText","localStorage","setItem","JSON","stringify","push","passwordInvalidText","emailInvalidText","missingValueText","to","RegisterPage"],"mappings":"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","file":"static/js/8.7b709856.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useRef } from 'react';\r\nimport './Toast.scss';\r\n\r\nconst Toast = props => {\r\n    const { position, description, title, onClose,show} = props;\r\n    const toastRef = useRef();\r\n\r\n    if(show){\r\n        setTimeout(()=>{\r\n            onClose();\r\n        },5000)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section role=\"alert\"  className={show ? `notification-container ${position} ${title}` : 'notification-close'}>\r\n                <div className={`notification toast ${position}`}>\r\n                    <div ref={toastRef} className=\"notification-heading\">\r\n                        <h4 className=\"notification-title\">{title}</h4>\r\n                        <button data-testid=\"toast-close-btn\" onClick={onClose}>X</button>\r\n                    </div>\r\n                    <p className=\"notification-message\">\r\n                        {description}\r\n                    </p>\r\n                </div>\r\n            </section>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Toast;","import { TextField } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { memo } from \"react\";\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n      },\r\n      '& .MuiInputBase-input':{\r\n        fontSize:12\r\n      },\r\n      '& .MuiInputLabel-root':{\r\n        fontSize:12\r\n      },\r\n        width:'100%',\r\n        margin: '10px 0px',\r\n    },\r\n  }));\r\n\r\nconst CustomTextField = ({id,onChange,value,label,type,error,helperText},props) => {\r\n    const classes = useStyles();\r\n    return <TextField \r\n            {...props} \r\n            className={classes.root}\r\n            error={error} \r\n            helperText={helperText} \r\n            id={id} \r\n            value={value} \r\n            onChange={onChange} \r\n            label={label} \r\n            type={type}\r\n          />\r\n}\r\n\r\nexport default memo(CustomTextField);","import { Button } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { memo } from \"react\";\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width:'100%',\r\n        margin: '10px 0px',\r\n        backgroundColor:'#b72f60'\r\n    },\r\n  }));\r\n\r\nconst CustomButton = ({onClick,id,children,type,value},props) => {\r\n    const classes = useStyles();\r\n    return <Button {...props} className={classes.root} type={type} value={value}  variant=\"contained\" color=\"secondary\" onClick={onClick} id={id}>{children}</Button>\r\n}\r\n\r\nexport default memo(CustomButton)","import { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport CustomTextField from '../custom/CustomTextField';\r\nimport CustomButton from '../custom/CustomButton';\r\nimport { checkMissing, validateEmail, validatePassword } from '../../utils/Validation';\r\nimport { errorMessage, passwordHelperText, registerText } from '../../constants';\r\nimport CustomLink from '../custom/NavLink';\r\nimport { useRef } from 'react';\r\nimport Toast from '../custom/Toast';\r\n\r\nconst Register = () => {\r\n    const history = useHistory()\r\n    const [registerForm, setRegisterForm] = useState({\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n    })\r\n    const [error, setError] = useState('')\r\n    const errorTextRef = useRef();\r\n    const [show, setShow] = useState(false)\r\n\r\n    const validateForm = () => {\r\n        if (!checkMissing(registerForm)) {\r\n            errorTextRef.current.focus();\r\n            setError(errorMessage.missingValueText)\r\n        }\r\n        else if (!validateEmail(registerForm.email)) {\r\n            errorTextRef.current.focus();\r\n            setError(errorMessage.emailInvalidText)\r\n        }\r\n        else if (!validatePassword(registerForm.password)) {\r\n            errorTextRef.current.focus();\r\n            setError(`${errorMessage.passwordInvalidText} - ${passwordHelperText}`)\r\n        }\r\n        else if (registerForm.password !== registerForm.confirmPassword) {\r\n            errorTextRef.current.focus();\r\n            setError(errorMessage.passwordMismatchText)\r\n        } else {\r\n            localStorage.setItem('formData', JSON.stringify(registerForm))\r\n            setShow(true)\r\n            setTimeout(() => {\r\n                history.push('/login')\r\n            }, 2000)\r\n        }\r\n    }\r\n\r\n    const handleClick = (event) => {\r\n        event.preventDefault();\r\n        validateForm()\r\n    }\r\n\r\n    const handleTextChange = (e) => {\r\n        const { id, value } = e.target\r\n        setRegisterForm((prev) => ({\r\n            ...prev,\r\n            [id]: value\r\n        }))\r\n    }\r\n\r\n    return <div className=\"App\">\r\n        <div className=\"flex-div\">\r\n            <section className=\"align-left margin-top\">\r\n                <h2>Signup</h2>\r\n                <p>{registerText}</p>\r\n            </section>\r\n            <section className=\"auth-form\">\r\n                <p ref={errorTextRef} tabIndex={0} className=\"align-center error-text\">{error}</p>\r\n                <form autoComplete=\"on\">\r\n                    <CustomTextField\r\n                        label=\"First Name\"\r\n                        onChange={handleTextChange}\r\n                        id=\"firstName\" />\r\n                    <CustomTextField\r\n                        label=\"Last Name\"\r\n                        onChange={handleTextChange}\r\n                        id=\"lastName\" />\r\n                    <CustomTextField\r\n                        label=\"Email\"\r\n                        onChange={handleTextChange}\r\n                        id=\"email\"\r\n                        helperText=\"email@email.com\"\r\n                    />\r\n                    <CustomTextField\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        onChange={handleTextChange}\r\n                        id=\"password\"\r\n                        helperText={passwordHelperText}\r\n                    />\r\n                    <CustomTextField\r\n                        label=\"Confirm Password\"\r\n                        type=\"password\"\r\n                        onChange={handleTextChange}\r\n                        id=\"confirmPassword\"\r\n                    />\r\n                    <CustomButton\r\n                        tabIndex={-1}\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        onClick={handleClick}\r\n                        id=\"register\">\r\n                        Sign In\r\n                    </CustomButton>\r\n                    <CustomLink to=\"/login\">Back to Login</CustomLink>\r\n                </form>\r\n\r\n            </section>\r\n        </div>\r\n        <Toast\r\n            show={show}\r\n            position=\"top-right\"\r\n            description=\"User Registered\"\r\n            title=\"Success\"\r\n            onClose={() => setShow(false)}\r\n        />\r\n    </div>\r\n}\r\n\r\nexport default Register;","import Register from '../components/register/Register';\r\n\r\nconst RegisterPage = () => {\r\n    return <><Register /></>\r\n}\r\n\r\nexport default RegisterPage;"],"sourceRoot":""}