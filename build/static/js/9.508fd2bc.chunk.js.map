{"version":3,"sources":["components/custom/CustomButton.jsx","components/custom/CustomTextField.jsx","components/register/Register.jsx","pages/RegisterPage.jsx"],"names":["useStyles","makeStyles","theme","root","width","margin","backgroundColor","CustomButton","onClick","id","children","classes","className","variant","color","memo","spacing","fontSize","CustomTextField","onChange","value","label","type","error","helperText","Register","history","useHistory","useState","firstName","lastName","email","password","confirmPassword","registerForm","setRegisterForm","setError","handleTextChange","e","target","prev","registerText","style","autoComplete","passwordHelperText","event","preventDefault","checkMissing","validateEmail","validatePassword","errorMessage","passwordMismatchText","push","passwordInvalidText","emailInvalidText","missingValueText","to","RegisterPage"],"mappings":"4IAAA,mCAGMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,MAAM,OACNC,OAAQ,WACRC,gBAAgB,eAIlBC,EAAe,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,QAAQC,EAAiB,EAAjBA,GAAGC,EAAc,EAAdA,SACxBC,EAAUX,IAChB,OAAO,cAAC,IAAD,CAAQY,UAAWD,EAAQR,KAAOU,QAAQ,YAAYC,MAAM,YAAYN,QAASA,EAASC,GAAIA,EAA9F,SAAmGC,KAG/FK,mBAAKR,I,iCChBpB,mCAGMP,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACJ,uBAAwB,CACtBE,OAAQH,EAAMc,QAAQ,IAExB,wBAAwB,CACtBC,SAAS,IAEX,wBAAwB,CACtBA,SAAS,IAETb,MAAM,OACNC,OAAQ,gBAIVa,EAAkB,SAAC,GAAqD,IAApDT,EAAmD,EAAnDA,GAAGU,EAAgD,EAAhDA,SAASC,EAAuC,EAAvCA,MAAMC,EAAiC,EAAjCA,MAAMC,EAA2B,EAA3BA,KAAKC,EAAsB,EAAtBA,MAAMC,EAAgB,EAAhBA,WACnDb,EAAUX,IAChB,OAAO,cAAC,IAAD,CAAWY,UAAWD,EAAQR,KAAMoB,MAAOA,EAAOC,WAAYA,EAAYf,GAAIA,EAAIW,MAAOA,EAAOD,SAAUA,EAAUE,MAAOA,EAAOC,KAAMA,KAGpIP,mBAAKG,I,mIC4ELO,EA5FE,WACb,IAAMC,EAAUC,cAChB,EAAwCC,mBAAS,CAC7CC,UAAW,GACXC,SAAU,GACVC,MAAO,GACPC,SAAU,GACVC,gBAAiB,KALrB,mBAAOC,EAAP,KAAqBC,EAArB,KAOA,EAA0BP,mBAAS,IAAnC,mBAAOL,EAAP,KAAca,EAAd,KAwBMC,EAAmB,SAACC,GACtB,MAAsBA,EAAEC,OAAhB9B,EAAR,EAAQA,GAAIW,EAAZ,EAAYA,MACZe,GAAgB,SAACK,GAAD,mBAAC,eACVA,GADS,kBAEX/B,EAAKW,QAId,OAAO,qBAAKR,UAAU,MAAf,SACH,sBAAKA,UAAU,WAAf,UACI,0BAASA,UAAU,aAAnB,UACI,wCACA,gCAAQ6B,SAEZ,0BAAS7B,UAAU,YAAnB,UACA,qBAAKA,UAAU,eAAe8B,MAAO,CAACzB,SAAS,GAAGH,MAAM,OAAxD,SAAiES,IAC7D,uBAAMoB,aAAa,KAAnB,UACI,cAACzB,EAAA,EAAD,CACIG,MAAM,aACNF,SAAUkB,EACV5B,GAAG,cACP,cAACS,EAAA,EAAD,CACIG,MAAM,YACNF,SAAUkB,EACV5B,GAAG,aACP,cAACS,EAAA,EAAD,CACIG,MAAM,QACNF,SAAUkB,EACV5B,GAAG,QACHe,WAAW,oBAEf,cAACN,EAAA,EAAD,CACIG,MAAM,WACNC,KAAK,WACLH,SAAUkB,EACV5B,GAAG,WACHe,WAAYoB,MAEhB,cAAC1B,EAAA,EAAD,CACIG,MAAM,mBACNC,KAAK,WACLH,SAAUkB,EACV5B,GAAG,oBAEP,cAACF,EAAA,EAAD,CACAM,QAAQ,YACRC,MAAM,YACNN,QApDI,SAACqC,GACjBA,EAAMC,iBAjBFC,YAAab,GAGPc,YAAcd,EAAaH,OAG5BkB,YAAiBf,EAAaF,UAG9BE,EAAaF,WAAaE,EAAaD,gBAC5CG,EAASc,IAAaC,sBAEtBzB,EAAQ0B,KAAK,UALbhB,EAASc,IAAaG,qBAHtBjB,EAASc,IAAaI,kBAHtBlB,EAASc,IAAaK,mBAoEd9C,GAAG,WAJH,qBAOJ,cAAC,IAAD,CAAY+C,GAAG,SAAf,uCCtFDC,UAJM,WACjB,OAAO,mCAAE,cAAC,EAAD","file":"static/js/9.508fd2bc.chunk.js","sourcesContent":["import { Button } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { memo } from \"react\";\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width:'100%',\r\n        margin: '10px 0px',\r\n        backgroundColor:'#b72f60'\r\n    },\r\n  }));\r\n\r\nconst CustomButton = ({onClick,id,children}) => {\r\n    const classes = useStyles();\r\n    return <Button className={classes.root}  variant=\"contained\" color=\"secondary\" onClick={onClick} id={id}>{children}</Button>\r\n}\r\n\r\nexport default memo(CustomButton)","import { TextField } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { memo } from \"react\";\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n      },\r\n      '& .MuiInputBase-input':{\r\n        fontSize:12\r\n      },\r\n      '& .MuiInputLabel-root':{\r\n        fontSize:12\r\n      },\r\n        width:'100%',\r\n        margin: '10px 0px',\r\n    },\r\n  }));\r\n\r\nconst CustomTextField = ({id,onChange,value,label,type,error,helperText}) => {\r\n    const classes = useStyles();\r\n    return <TextField className={classes.root} error={error} helperText={helperText} id={id} value={value} onChange={onChange} label={label} type={type}/>\r\n}\r\n\r\nexport default memo(CustomTextField);","import { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport CustomTextField from '../custom/CustomTextField';\r\nimport CustomButton from '../custom/CustomButton';\r\nimport { checkMissing, validateEmail, validatePassword } from '../../utils/Validation';\r\nimport { errorMessage, passwordHelperText, registerText } from '../../constants';\r\nimport CustomLink from '../custom/NavLink';\r\n\r\nconst Register = () => {\r\n    const history = useHistory()\r\n    const [registerForm, setRegisterForm] = useState({\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n    })\r\n    const [error, setError] = useState('')\r\n\r\n    const validateForm = () => {\r\n        if(!checkMissing(registerForm)){\r\n            setError(errorMessage.missingValueText)\r\n        }\r\n        else if (!validateEmail(registerForm.email)) {\r\n            setError(errorMessage.emailInvalidText)\r\n        } \r\n        else if(!validatePassword(registerForm.password)){\r\n            setError(errorMessage.passwordInvalidText)\r\n        }\r\n        else if (registerForm.password !== registerForm.confirmPassword) {\r\n            setError(errorMessage.passwordMismatchText)\r\n        }else {\r\n            history.push('/login')\r\n        }\r\n    }\r\n\r\n    const handleClick = (event) => {\r\n        event.preventDefault();\r\n        validateForm()\r\n    }\r\n\r\n    const handleTextChange = (e) => {\r\n        const { id, value } = e.target\r\n        setRegisterForm((prev) => ({\r\n            ...prev,\r\n            [id]: value\r\n        }))\r\n    }\r\n\r\n    return <div className=\"App\">\r\n        <div className=\"flex-div\">\r\n            <section className=\"align-left\">\r\n                <h2>Signup</h2>\r\n                <small>{registerText}</small>\r\n            </section>\r\n            <section className=\"auth-form\">\r\n            <div className=\"align-center\" style={{fontSize:14,color:'red'}}>{error}</div>\r\n                <form autoComplete=\"on\">\r\n                    <CustomTextField\r\n                        label=\"First Name\"\r\n                        onChange={handleTextChange}\r\n                        id=\"firstName\" />\r\n                    <CustomTextField\r\n                        label=\"Last Name\"\r\n                        onChange={handleTextChange}\r\n                        id=\"lastName\" />\r\n                    <CustomTextField\r\n                        label=\"Email\"\r\n                        onChange={handleTextChange}\r\n                        id=\"email\"\r\n                        helperText=\"email@email.com\"\r\n                    />\r\n                    <CustomTextField\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        onChange={handleTextChange}\r\n                        id=\"password\"\r\n                        helperText={passwordHelperText}\r\n                    />\r\n                    <CustomTextField\r\n                        label=\"Confirm Password\"\r\n                        type=\"password\"\r\n                        onChange={handleTextChange}\r\n                        id=\"confirmPassword\"\r\n                    />\r\n                    <CustomButton \r\n                    variant=\"contained\" \r\n                    color=\"secondary\" \r\n                    onClick={handleClick} \r\n                    id=\"register\">\r\n                        Sign In\r\n                    </CustomButton>\r\n                <CustomLink to=\"/login\">Back to Login</CustomLink>\r\n                </form>\r\n            </section>\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default Register;","import Register from '../components/register/Register';\r\n\r\nconst RegisterPage = () => {\r\n    return <><Register /></>\r\n}\r\n\r\nexport default RegisterPage;"],"sourceRoot":""}